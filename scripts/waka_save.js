"use strict";const a=require("fs"),e="https://wakatime.com/api/v1/users/current/summaries?range=",t=new Headers({Authorization:"Basic d2FrYV9lZTAzYmVjYS05ODA3LTRjYzMtOWIzYi0zZDY5NjVjNGQ2MDE="}),n="data/waka.total.json";let s,o={total:0,language:[]};const l=function(e,t){const s=JSON.parse(t);s.days+=1;const l=new Map;let c;s.languages.forEach((a=>{l.set(a.name,a.seconds)})),s.total+=o.total,o.language.forEach((a=>{l.has(a.name)?(c=l.get(a.name),c+=a.seconds,l.set(a.name,c)):l.set(a.name,a.seconds)})),s.languages=function(a){let e=[];for(let t of a)e.push({name:t[0],seconds:t[1]});return e}(l),a.writeFile(n,JSON.stringify(s),{flag:"w"},(a=>{a?console.log(a.toString()):console.log("[WAKA:SAVE]:total写入成功")}))};(async function(){const{data:a}=await fetch(e+"Yesterday",{headers:t}).then((a=>a.json()));o.total=a[0].grand_total.total_seconds,o.language=a[0].languages.map((a=>({name:a.name,seconds:a.total_seconds}))),s=a[0].range.end})().then((e=>{const t=`,{"${s}": ${JSON.stringify(o)}}`;a.readFile(n,{encoding:"utf-8"},l),a.appendFile("data/waka.data.bak",t,(a=>{a?console.log("[WAKA:SAVE]:",a.toString()):console.log("[WAKA:SAVE]:history写入成功")}))}));
